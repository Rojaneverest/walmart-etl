[2025-05-27T18:43:22.614+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: walmart_etl_dag.transform_to_staging manual__2025-05-27T18:43:16+00:00 [queued]>
[2025-05-27T18:43:22.623+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: walmart_etl_dag.transform_to_staging manual__2025-05-27T18:43:16+00:00 [queued]>
[2025-05-27T18:43:22.624+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2025-05-27T18:43:22.631+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): transform_to_staging> on 2025-05-27 18:43:16+00:00
[2025-05-27T18:43:22.636+0000] {standard_task_runner.py:57} INFO - Started process 488 to run task
[2025-05-27T18:43:22.641+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'walmart_etl_dag', 'transform_to_staging', 'manual__2025-05-27T18:43:16+00:00', '--job-id', '246', '--raw', '--subdir', 'DAGS_FOLDER/walmart_etl_dag.py', '--cfg-path', '/tmp/tmpoj5lvy_i']
[2025-05-27T18:43:22.644+0000] {standard_task_runner.py:85} INFO - Job 246: Subtask transform_to_staging
[2025-05-27T18:43:22.685+0000] {task_command.py:416} INFO - Running <TaskInstance: walmart_etl_dag.transform_to_staging manual__2025-05-27T18:43:16+00:00 [running]> on host d80f98a6628f
[2025-05-27T18:43:22.943+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='walmart_etl_dag' AIRFLOW_CTX_TASK_ID='transform_to_staging' AIRFLOW_CTX_EXECUTION_DATE='2025-05-27T18:43:16+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-05-27T18:43:16+00:00'
[2025-05-27T18:43:22.944+0000] {logging_mixin.py:154} INFO - Starting transformation from ODS to staging layer...
[2025-05-27T18:43:22.947+0000] {logging_mixin.py:154} INFO - Transforming date dimension...
[2025-05-27T18:43:22.959+0000] {logging_mixin.py:154} INFO - Transforming customer dimension...
[2025-05-27T18:43:23.142+0000] {logging_mixin.py:154} INFO - Transforming product dimension...
[2025-05-27T18:43:23.205+0000] {logging_mixin.py:154} INFO - Transforming store dimension...
[2025-05-27T18:43:23.217+0000] {logging_mixin.py:154} INFO - Transforming sales fact...
[2025-05-27T18:43:23.361+0000] {logging_mixin.py:154} INFO - Transforming inventory fact...
[2025-05-27T18:43:23.367+0000] {logging_mixin.py:154} INFO - Transforming returns fact...
[2025-05-27T18:43:23.368+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1910, in _execute_context
    self.dialect.do_execute(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
psycopg2.errors.UndefinedColumn: column "return_date_key" of relation "stg_returns" does not exist
LINE 3:                 return_key, return_id, return_date_key, prod...
                                               ^


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 192, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 209, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/walmart_etl_dag.py", line 96, in etl_transform_to_staging
    batch_id = transform_to_staging(engine)
  File "/opt/airflow/walmart-etl/etl_data_loader.py", line 641, in transform_to_staging
    conn.execute(text("""
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1385, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 334, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1577, in _execute_clauseelement
    ret = self._execute_context(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1953, in _execute_context
    self._handle_dbapi_exception(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 2134, in _handle_dbapi_exception
    util.raise_(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 211, in raise_
    raise exception
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1910, in _execute_context
    self.dialect.do_execute(
  File "/home/airflow/.local/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 736, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "return_date_key" of relation "stg_returns" does not exist
LINE 3:                 return_key, return_id, return_date_key, prod...
                                               ^

[SQL: 
            INSERT INTO stg_returns (
                return_key, return_id, return_date_key, product_key, store_key,
                reason_code, return_amount, quantity_returned, return_condition,
                original_sale_id, etl_batch_id, etl_timestamp
            )
            SELECT 
                -- Generate a surrogate key based on row number
                ROW_NUMBER() OVER (ORDER BY r.return_id) as return_key,
                r.return_id,
                -- Date key from return date
                TO_CHAR(r.return_date, 'YYYYMMDD')::integer as return_date_key,
                -- Use simplified approach for dimension keys
                ROW_NUMBER() OVER (PARTITION BY r.product_id ORDER BY r.return_id) as product_key,
                ROW_NUMBER() OVER (PARTITION BY r.store_id ORDER BY r.return_id) as store_key,
                r.reason_code,
                r.return_amount,
                r.quantity_returned,
                r.return_condition,
                r.original_sale_id,
                %(batch_id)s as etl_batch_id,
                CURRENT_TIMESTAMP as etl_timestamp
            FROM ods_returns r
            ON CONFLICT (return_key) DO UPDATE
            SET 
                reason_code = EXCLUDED.reason_code,
                return_amount = EXCLUDED.return_amount,
                quantity_returned = EXCLUDED.quantity_returned,
                return_condition = EXCLUDED.return_condition,
                etl_batch_id = EXCLUDED.etl_batch_id,
                etl_timestamp = EXCLUDED.etl_timestamp
        ]
[parameters: {'batch_id': 'BATCH_20250527184322'}]
(Background on this error at: https://sqlalche.me/e/14/f405)
[2025-05-27T18:43:23.377+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=walmart_etl_dag, task_id=transform_to_staging, execution_date=20250527T184316, start_date=20250527T184322, end_date=20250527T184323
[2025-05-27T18:43:23.384+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 246 for task transform_to_staging ((psycopg2.errors.UndefinedColumn) column "return_date_key" of relation "stg_returns" does not exist
LINE 3:                 return_key, return_id, return_date_key, prod...
                                               ^

[SQL: 
            INSERT INTO stg_returns (
                return_key, return_id, return_date_key, product_key, store_key,
                reason_code, return_amount, quantity_returned, return_condition,
                original_sale_id, etl_batch_id, etl_timestamp
            )
            SELECT 
                -- Generate a surrogate key based on row number
                ROW_NUMBER() OVER (ORDER BY r.return_id) as return_key,
                r.return_id,
                -- Date key from return date
                TO_CHAR(r.return_date, 'YYYYMMDD')::integer as return_date_key,
                -- Use simplified approach for dimension keys
                ROW_NUMBER() OVER (PARTITION BY r.product_id ORDER BY r.return_id) as product_key,
                ROW_NUMBER() OVER (PARTITION BY r.store_id ORDER BY r.return_id) as store_key,
                r.reason_code,
                r.return_amount,
                r.quantity_returned,
                r.return_condition,
                r.original_sale_id,
                %(batch_id)s as etl_batch_id,
                CURRENT_TIMESTAMP as etl_timestamp
            FROM ods_returns r
            ON CONFLICT (return_key) DO UPDATE
            SET 
                reason_code = EXCLUDED.reason_code,
                return_amount = EXCLUDED.return_amount,
                quantity_returned = EXCLUDED.quantity_returned,
                return_condition = EXCLUDED.return_condition,
                etl_batch_id = EXCLUDED.etl_batch_id,
                etl_timestamp = EXCLUDED.etl_timestamp
        ]
[parameters: {'batch_id': 'BATCH_20250527184322'}]
(Background on this error at: https://sqlalche.me/e/14/f405); 488)
[2025-05-27T18:43:23.420+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2025-05-27T18:43:23.438+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
